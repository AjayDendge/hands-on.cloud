version: 2
jobs:
  build:
    docker:
      - image: "circleci/node:11.5.0"
    working_directory: ~/src
    environment:
      TERRAFORM_VERSION: 0.11.8
    steps:
      - run: sudo apt-get update
      - run:
          name: install AWS CLI and Terraform
          command: |
            sudo apt-get install -y curl jq python bash ca-certificates git openssl unzip wget python-dev python-pip \
              xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
            cd /tmp && \
            wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
            sudo unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin
            sudo pip install awscli
            cd
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - dependencies-
      - run: npm install
      - run: npm install cypress
      - save_cache:
          paths:
            # all NPM modules
            - ~/.npm
            # Cypress binary (or yarn dependencies)
            - ~/.cache
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: Building site
          command: npx gatsby build
      - run:
          name: Run server and E2E tests locally or against external URL
          command: npm test
      - run:
          name: Deploying test site
          command: |
            terraform init -reconfigure
            aws s3 sync ./public s3://$(terraform output test_website_bucket)
      - run:
          name: Testing test site
          command: |
            CYPRESS_baseUrl=$(terraform output test_website_bucket)
            npm run cy:run
      - store_artifacts:
          path: ~/src/cypress/screenshots
      - store_artifacts:
          path: ~/src/cypress/videos
      # run tests here
      - deploy:
          name: Deploying to production ENV
          command: |
            terraform init -reconfigure
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              aws s3 sync ./public s3://$(terraform output origin_website_bucket)
            fi

workflows:
  version: 2
  tests:
    jobs:
      - build
